DECLARE
  begin_time date;
DECLARE
  end_time date;
SET
  begin_time = '2021-04-01';
SET
  end_time = CURRENT_DATE();
  #满送和捆绑事件无值
CREATE OR REPLACE TABLE
  `admin-account-293313.DWD.plugin_activity_b_wyn`
PARTITION BY
  prc_date
CLUSTER BY
  store_id,
  app_name AS(
  WITH
    set_activity AS (
    SELECT
      *
    FROM (
      SELECT
        id,
        time,
        store_id,
        CASE
          WHEN event IN('admin_plugin_rebate_create', 'admin_plugin_rebate_editor', 'admin_plugin_rebate_stop') THEN '满减活动'
          WHEN event IN ('admin_plugin_flashsale_create',
          'admin_plugin_flashsale_editor',
          'admin_plugin_flashsale_stop') THEN '限时促销'
          WHEN event IN ('admin_plugin_coupon_create', 'admin_plugin_coupon_editor', 'admin_plugin_coupon_stop') THEN '优惠码'
        -- WHEN event IN ('admin_plugin_discount_reduced_create', 'admin_plugin_discount_reduced_editor') THEN '满件减免'
        -- WHEN event IN ('admin_plugin_discount_present_create',
          -- 'admin_plugin_discount_present_editor') THEN '满额赠送'
        -- WHEN event IN ('admin_plugin_bundle_pricing_create', 'admin_plugin_bundle_pricing_editor') THEN '定价捆绑'
        -- WHEN event IN ('admin_plugin_bundle_combination_create',
          -- 'admin_plugin_bundle_combination_editor') THEN '组合捆绑'
          WHEN event IN ('admin_plugin_discount_reduced_create',
          'admin_plugin_discount_reduced_editor',
          'admin_plugin_discount_present_create',
          'admin_plugin_discount_present_editor') THEN '满送优惠'
          WHEN event IN ('admin_plugin_bundle_pricing_create', 'admin_plugin_bundle_pricing_editor', 'admin_plugin_bundle_combination_create', 'admin_plugin_bundle_combination_editor') THEN '捆绑销售'
          WHEN event IN ('admin_plugin_popups_create',
          'admin_plugin_popups_editor') THEN '弹窗通知'
          WHEN event = 'admin_plugin_sales_pop_detail' THEN '浮窗通知'
      END
        app_name,
        client_id,
        event,
        MAX(
        IF
          (p.key ='discount_id'
            OR p.key = 'activity_id',
            CONCAT(ifnull(p.string_value,
                ''),ifnull(CAST(p.int_value AS string),
                ''),ifnull(CAST(p.float_value AS string),
                ''),ifnull(CAST(p.bool_value AS string),
                '')),
            NULL)) activity_id,
        MAX(
        IF
          (p.key ='product_num'
            OR p.key = 'products_num'
            OR p.key = 'entitled_product_num',
            CONCAT(ifnull(p.string_value,
                ''),ifnull(CAST(p.int_value AS string),
                ''),ifnull(CAST(p.float_value AS string),
                ''),ifnull(CAST(p.bool_value AS string),
                '')),
            NULL)) product_num,
        MAX(
        IF
          (p.key ='discount_type'
            OR p.key = 'activity_type'
            OR p.key = 'value_type',
            CONCAT(ifnull(p.string_value,
                ''),ifnull(CAST(p.int_value AS string),
                ''),ifnull(CAST(p.float_value AS string),
                ''),ifnull(CAST(p.bool_value AS string),
                '')),
            NULL)) activity_type,
        MAX(
        IF
          (p.key ='title',
            CONCAT(ifnull(p.string_value,
                ''),ifnull(CAST(p.int_value AS string),
                ''),ifnull(CAST(p.float_value AS string),
                ''),ifnull(CAST(p.bool_value AS string),
                '')),
            NULL)) activity_name,
        MAX(
        IF
          (p.key ='starts_at',
            TIMESTAMP_SECONDS (CAST(CONCAT(ifnull(p.string_value,
                    ''),ifnull(CAST(p.int_value AS string),
                    ''),ifnull(CAST(p.float_value AS string),
                    ''),ifnull(CAST(p.bool_value AS string),
                    ''))AS int64)),
            NULL)) starts_at,
        MAX(
        IF
          (p.key ='ends_at'
            OR p.key = 'stop_time',
            TIMESTAMP_SECONDS (CAST(CONCAT(ifnull(p.string_value,
                    ''),ifnull(CAST(p.int_value AS string),
                    ''),ifnull(CAST(p.float_value AS string),
                    ''),ifnull(CAST(p.bool_value AS string),
                    ''))AS int64)),
            NULL)) ends_at
      FROM
        `shoplaza.shoplaza_analysis.events_all`
      LEFT JOIN
        UNNEST(properties) p
      WHERE
        event IN ('admin_plugin_rebate_create',
          'admin_plugin_rebate_editor',
          'admin_plugin_rebate_stop',
          'admin_plugin_flashsale_create',
          'admin_plugin_flashsale_editor',
          'admin_plugin_flashsale_stop',
          'admin_plugin_coupon_create',
          'admin_plugin_coupon_editor',
          'admin_plugin_coupon_stop',
          'admin_plugin_discount_reduced_create',
          'admin_plugin_discount_reduced_editor',
          'admin_plugin_discount_present_create',
          'admin_plugin_discount_present_editor',
          'admin_plugin_bundle_pricing_create',
          'admin_plugin_bundle_pricing_editor',
          'admin_plugin_bundle_combination_create',
          'admin_plugin_bundle_combination_editor',
          'admin_plugin_popups_create',
          'admin_plugin_popups_editor',
          'admin_plugin_sales_pop_detail')
        AND DATE(time,'Asia/Shanghai') BETWEEN begin_time
        AND end_time
        AND store_id IN (
        SELECT
          store_id
        FROM
          `admin-account-293313.KAM.stores_information_xiaoyang`
        WHERE
          internal = 0)
      GROUP BY
        1,
        2,
        3,
        4,
        5,
        6)
    WHERE
      activity_id IS NOT NULL
      AND activity_id != ''
      AND activity_id != ' '
      )
    #插件活动B端数据
    #店铺插件B端设置活动的每日最新信息
  SELECT
    ce.prc_date,
    #设置的日期
    ce.store_id,
    ce.app_name,
    ce.activity_id,
    ce.product_num,
    ce.activity_type,
    ce.activity_name,
    ce.starts_at,
    ifnull(s.ends_at,
      ce.ends_at) ends_at,
  IF
    (DATE(ce.ends_at) = '1969-12-31',
      -1,
      TIMESTAMP_DIFF(ce.ends_at,ce.starts_at,minute)) set_duration,
  IF
    (s.ends_at IS NULL,
    IF
      (DATE(ce.ends_at) = '1969-12-31',
        -1,
        TIMESTAMP_DIFF(ce.ends_at,ce.starts_at,minute)),
      TIMESTAMP_DIFF(s.ends_at,ce.starts_at,minute)) real_duration
  FROM (
    SELECT
      time,
      DATE(time,'Asia/Shanghai') prc_date,
      store_id,
      app_name,
      activity_id,
      product_num,
      activity_type,
      activity_name,
      starts_at,
      ends_at
    FROM (
      SELECT
        *,
        ROW_NUMBER() OVER(PARTITION BY activity_id, app_name, store_id, DATE(time,'Asia/Shanghai')
        ORDER BY
          time DESC) rk,
      FROM
        set_activity
      WHERE
        event NOT LIKE '%stop%'
        AND (ends_at>=starts_at
          OR DATE(ends_at) = '1969-12-31'))#非结束操作
    WHERE
      rk = 1)ce
  LEFT JOIN (
    SELECT
      time,
      DATE(time,'Asia/Shanghai') prc_date,
      store_id,
      app_name,
      activity_id,
      ends_at
    FROM (
      SELECT
        *,
        ROW_NUMBER() OVER(PARTITION BY activity_id, app_name, store_id, DATE(time,'Asia/Shanghai')
        ORDER BY
          time DESC) rk
      FROM
        set_activity
      WHERE
        event LIKE '%stop%'
        AND ends_at>=starts_at)#提前结束活动
    WHERE
      rk = 1 )s
  USING
    (prc_date,
      store_id,
      app_name,
      activity_id)
  WHERE
    ce.time<=s.time
    OR s.time IS NULL #筛掉异常数据
    )